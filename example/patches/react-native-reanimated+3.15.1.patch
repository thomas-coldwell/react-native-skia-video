diff --git a/node_modules/react-native-reanimated/Common/cpp/reanimated/NativeModules/NativeReanimatedModuleSpec.cpp b/node_modules/react-native-reanimated/Common/cpp/reanimated/NativeModules/NativeReanimatedModuleSpec.cpp
index 6df018d..8a815fe 100644
--- a/node_modules/react-native-reanimated/Common/cpp/reanimated/NativeModules/NativeReanimatedModuleSpec.cpp
+++ b/node_modules/react-native-reanimated/Common/cpp/reanimated/NativeModules/NativeReanimatedModuleSpec.cpp
@@ -10,7 +10,7 @@ namespace reanimated {
 
 static jsi::Value SPEC_PREFIX(makeShareableClone)(
     jsi::Runtime &rt,
-    TurboModule &turboModule,
+    TurboModuleX &turboModule,
     const jsi::Value *args,
     size_t) {
   return static_cast<NativeReanimatedModuleSpec *>(&turboModule)
@@ -22,7 +22,7 @@ static jsi::Value SPEC_PREFIX(makeShareableClone)(
 
 static jsi::Value SPEC_PREFIX(scheduleOnUI)(
     jsi::Runtime &rt,
-    TurboModule &turboModule,
+    TurboModuleX &turboModule,
     const jsi::Value *args,
     size_t) {
   static_cast<NativeReanimatedModuleSpec *>(&turboModule)
@@ -32,7 +32,7 @@ static jsi::Value SPEC_PREFIX(scheduleOnUI)(
 
 static jsi::Value SPEC_PREFIX(executeOnUIRuntimeSync)(
     jsi::Runtime &rt,
-    TurboModule &turboModule,
+    TurboModuleX &turboModule,
     const jsi::Value *args,
     size_t) {
   return static_cast<NativeReanimatedModuleSpec *>(&turboModule)
@@ -41,7 +41,7 @@ static jsi::Value SPEC_PREFIX(executeOnUIRuntimeSync)(
 
 static jsi::Value SPEC_PREFIX(createWorkletRuntime)(
     jsi::Runtime &rt,
-    TurboModule &turboModule,
+    TurboModuleX &turboModule,
     const jsi::Value *args,
     size_t) {
   return static_cast<NativeReanimatedModuleSpec *>(&turboModule)
@@ -50,7 +50,7 @@ static jsi::Value SPEC_PREFIX(createWorkletRuntime)(
 
 static jsi::Value SPEC_PREFIX(scheduleOnRuntime)(
     jsi::Runtime &rt,
-    TurboModule &turboModule,
+    TurboModuleX &turboModule,
     const jsi::Value *args,
     size_t) {
   return static_cast<NativeReanimatedModuleSpec *>(&turboModule)
@@ -59,7 +59,7 @@ static jsi::Value SPEC_PREFIX(scheduleOnRuntime)(
 
 static jsi::Value SPEC_PREFIX(registerEventHandler)(
     jsi::Runtime &rt,
-    TurboModule &turboModule,
+    TurboModuleX &turboModule,
     const jsi::Value *args,
     size_t) {
   return static_cast<NativeReanimatedModuleSpec *>(&turboModule)
@@ -69,7 +69,7 @@ static jsi::Value SPEC_PREFIX(registerEventHandler)(
 
 static jsi::Value SPEC_PREFIX(unregisterEventHandler)(
     jsi::Runtime &rt,
-    TurboModule &turboModule,
+    TurboModuleX &turboModule,
     const jsi::Value *args,
     size_t) {
   static_cast<NativeReanimatedModuleSpec *>(&turboModule)
@@ -79,7 +79,7 @@ static jsi::Value SPEC_PREFIX(unregisterEventHandler)(
 
 static jsi::Value SPEC_PREFIX(getViewProp)(
     jsi::Runtime &rt,
-    TurboModule &turboModule,
+    TurboModuleX &turboModule,
     const jsi::Value *args,
     size_t) {
   static_cast<NativeReanimatedModuleSpec *>(&turboModule)
@@ -90,7 +90,7 @@ static jsi::Value SPEC_PREFIX(getViewProp)(
 
 static jsi::Value SPEC_PREFIX(enableLayoutAnimations)(
     jsi::Runtime &rt,
-    TurboModule &turboModule,
+    TurboModuleX &turboModule,
     const jsi::Value *args,
     size_t) {
   static_cast<NativeReanimatedModuleSpec *>(&turboModule)
@@ -100,7 +100,7 @@ static jsi::Value SPEC_PREFIX(enableLayoutAnimations)(
 
 static jsi::Value SPEC_PREFIX(registerSensor)(
     jsi::Runtime &rt,
-    TurboModule &turboModule,
+    TurboModuleX &turboModule,
     const jsi::Value *args,
     size_t) {
   return static_cast<NativeReanimatedModuleSpec *>(&turboModule)
@@ -114,7 +114,7 @@ static jsi::Value SPEC_PREFIX(registerSensor)(
 
 static jsi::Value SPEC_PREFIX(unregisterSensor)(
     jsi::Runtime &rt,
-    TurboModule &turboModule,
+    TurboModuleX &turboModule,
     const jsi::Value *args,
     size_t) {
   static_cast<NativeReanimatedModuleSpec *>(&turboModule)
@@ -124,7 +124,7 @@ static jsi::Value SPEC_PREFIX(unregisterSensor)(
 
 static jsi::Value SPEC_PREFIX(configureProps)(
     jsi::Runtime &rt,
-    TurboModule &turboModule,
+    TurboModuleX &turboModule,
     const jsi::Value *args,
     size_t) {
   static_cast<NativeReanimatedModuleSpec *>(&turboModule)
@@ -134,7 +134,7 @@ static jsi::Value SPEC_PREFIX(configureProps)(
 
 static jsi::Value SPEC_PREFIX(subscribeForKeyboardEvents)(
     jsi::Runtime &rt,
-    TurboModule &turboModule,
+    TurboModuleX &turboModule,
     const jsi::Value *args,
     size_t) {
   return static_cast<NativeReanimatedModuleSpec *>(&turboModule)
@@ -143,7 +143,7 @@ static jsi::Value SPEC_PREFIX(subscribeForKeyboardEvents)(
 
 static jsi::Value SPEC_PREFIX(unsubscribeFromKeyboardEvents)(
     jsi::Runtime &rt,
-    TurboModule &turboModule,
+    TurboModuleX &turboModule,
     const jsi::Value *args,
     size_t) {
   static_cast<NativeReanimatedModuleSpec *>(&turboModule)
@@ -153,7 +153,7 @@ static jsi::Value SPEC_PREFIX(unsubscribeFromKeyboardEvents)(
 
 static jsi::Value SPEC_PREFIX(configureLayoutAnimationBatch)(
     jsi::Runtime &rt,
-    TurboModule &turboModule,
+    TurboModuleX &turboModule,
     const jsi::Value *args,
     size_t) {
   return static_cast<NativeReanimatedModuleSpec *>(&turboModule)
@@ -162,7 +162,7 @@ static jsi::Value SPEC_PREFIX(configureLayoutAnimationBatch)(
 
 static jsi::Value SPEC_PREFIX(setShouldAnimateExiting)(
     jsi::Runtime &rt,
-    TurboModule &turboModule,
+    TurboModuleX &turboModule,
     const jsi::Value *args,
     size_t) {
   static_cast<NativeReanimatedModuleSpec *>(&turboModule)
@@ -172,9 +172,9 @@ static jsi::Value SPEC_PREFIX(setShouldAnimateExiting)(
 
 NativeReanimatedModuleSpec::NativeReanimatedModuleSpec(
     const std::shared_ptr<CallInvoker> &jsInvoker)
-    : TurboModule("NativeReanimated", jsInvoker) {
+    : TurboModuleX("NativeReanimated", jsInvoker) {
   methodMap_["makeShareableClone"] =
-      MethodMetadata{2, SPEC_PREFIX(makeShareableClone)};
+      MethodMetadata{3, SPEC_PREFIX(makeShareableClone)};
 
   methodMap_["scheduleOnUI"] = MethodMetadata{1, SPEC_PREFIX(scheduleOnUI)};
   methodMap_["executeOnUIRuntimeSync"] =
diff --git a/node_modules/react-native-reanimated/Common/cpp/reanimated/NativeModules/NativeReanimatedModuleSpec.h b/node_modules/react-native-reanimated/Common/cpp/reanimated/NativeModules/NativeReanimatedModuleSpec.h
index b4505a0..7a050e5 100644
--- a/node_modules/react-native-reanimated/Common/cpp/reanimated/NativeModules/NativeReanimatedModuleSpec.h
+++ b/node_modules/react-native-reanimated/Common/cpp/reanimated/NativeModules/NativeReanimatedModuleSpec.h
@@ -5,7 +5,7 @@
 #include <vector>
 
 #ifdef ANDROID
-#include "TurboModule.h"
+#include "TurboModuleX.h"
 #else
 #include <ReactCommon/TurboModule.h>
 #endif
@@ -17,7 +17,7 @@ using namespace react;
 
 namespace reanimated {
 
-class JSI_EXPORT NativeReanimatedModuleSpec : public TurboModule {
+class JSI_EXPORT NativeReanimatedModuleSpec : public TurboModuleX {
  protected:
   explicit NativeReanimatedModuleSpec(
       const std::shared_ptr<CallInvoker> &jsInvoker);
diff --git a/node_modules/react-native-reanimated/android/src/main/cpp/TurboModule.cpp b/node_modules/react-native-reanimated/android/src/main/cpp/TurboModuleX.cpp
similarity index 90%
rename from node_modules/react-native-reanimated/android/src/main/cpp/TurboModule.cpp
rename to node_modules/react-native-reanimated/android/src/main/cpp/TurboModuleX.cpp
index a946694..79cd4cb 100644
--- a/node_modules/react-native-reanimated/android/src/main/cpp/TurboModule.cpp
+++ b/node_modules/react-native-reanimated/android/src/main/cpp/TurboModuleX.cpp
@@ -5,21 +5,21 @@
  * LICENSE file in the root directory of this source tree.
  */
 
-#include "TurboModule.h"
+#include "TurboModuleX.h"
 
 using namespace facebook;
 
 namespace facebook {
 namespace react {
 
-TurboModule::TurboModule(
+TurboModuleX::TurboModuleX(
     const std::string &name,
     const std::shared_ptr<CallInvoker> &jsInvoker)
     : name_(name), jsInvoker_(jsInvoker) {}
 
-TurboModule::~TurboModule() {}
+TurboModuleX::~TurboModuleX() {}
 
-jsi::Value TurboModule::get(
+jsi::Value TurboModuleX::get(
     jsi::Runtime &runtime,
     const jsi::PropNameID &propName) {
   std::string propNameUtf8 = propName.utf8(runtime);
diff --git a/node_modules/react-native-reanimated/android/src/main/cpp/TurboModule.h b/node_modules/react-native-reanimated/android/src/main/cpp/TurboModuleX.h
similarity index 87%
rename from node_modules/react-native-reanimated/android/src/main/cpp/TurboModule.h
rename to node_modules/react-native-reanimated/android/src/main/cpp/TurboModuleX.h
index 6fd21c7..a6ef8ec 100644
--- a/node_modules/react-native-reanimated/android/src/main/cpp/TurboModule.h
+++ b/node_modules/react-native-reanimated/android/src/main/cpp/TurboModuleX.h
@@ -34,12 +34,12 @@ enum TurboModuleMethodValueKind {
 /**
  * Base HostObject class for every module to be exposed to JS
  */
-class JSI_EXPORT TurboModule : public facebook::jsi::HostObject {
+class JSI_EXPORT TurboModuleX : public facebook::jsi::HostObject {
  public:
-  TurboModule(
+  TurboModuleX(
       const std::string &name,
       const std::shared_ptr<CallInvoker> &jsInvoker);
-  virtual ~TurboModule();
+  virtual ~TurboModuleX();
 
   facebook::jsi::Value get(
       facebook::jsi::Runtime &runtime,
@@ -53,7 +53,7 @@ class JSI_EXPORT TurboModule : public facebook::jsi::HostObject {
     size_t argCount;
     facebook::jsi::Value (*invoker)(
         facebook::jsi::Runtime &rt,
-        TurboModule &turboModule,
+        TurboModuleX &turboModule,
         const facebook::jsi::Value *args,
         size_t count);
   };
@@ -66,7 +66,7 @@ class JSI_EXPORT TurboModule : public facebook::jsi::HostObject {
  * given a name.
  */
 using TurboModuleProviderFunctionType =
-    std::function<std::shared_ptr<TurboModule>(const std::string &name)>;
+    std::function<std::shared_ptr<TurboModuleX>(const std::string &name)>;
 
 } // namespace react
 } // namespace facebook
